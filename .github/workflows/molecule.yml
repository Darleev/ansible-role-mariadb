---
name: molecule

on:
  push:
  pull_request:
  schedule:
    - cron: "0 5 * * 2"

jobs:
  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # - distro: ubuntu-18.04
          #   playbook: converge.yml
          # - distro: ubuntu-18.04
          #   playbook: converge-mdbf.yml
          # - distro: ubuntu-20.04
          #   playbook: converge.yml
          # - distro: ubuntu-20.04
          #   playbook: converge-mdbf.yml
          - distro: ubuntu-20.10
            playbook: converge.yml
          # - distro: ubuntu-20.10
          #   playbook: converge-mdbf.yml
          # - distro: debian-10
          #   playbook: converge.yml
          # - distro: debian-10
          #   playbook: converge-mdbf.yml
          # - distro: debian-sid
          #   playbook: converge.yml

    steps:
      - name: configure podman cgroup
        run: dpkg -l | grep podman
      - name: upgrade podman
        run: |
          . /etc/os-release
          echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
          curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key | sudo apt-key add -
          sudo apt-get update
          sudo apt-get -y upgrade
          sudo apt-get -y install podman
      - name: start container
        run: podman run --name sys-test -ti --systemd=always fauust/docker-systemd:debian-10
      - name: execute command in container
        run: podman exec -t sys-test bash -c "ps fax"

      # - uses: actions/checkout@v2
      # - name: Install requirements
      #   run: pip3 install -r requirements.txt

      # - name: Run molecule
      #   run: molecule test
      #   env:
      #     PY_COLORS: "1"
      #     ANSIBLE_FORCE_COLOR: "1"
      #     MOLECULE_DISTRO: ${{ matrix.distro }}
      #     MOLECULE_PLAYBOOK: ${{ matrix.playbook }}
